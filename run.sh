#!/bin/bash
#Obfuscated By xNot_Found
#Github : https://github.com/hatakecnk/BashProtector
vQBSJqgPpOkNakHpjowfhNdEkufxTeHyDrdYioCCYGafFPPagFpkmixbHgAPPrRExKHxYUViZhGduVEhXqJDQArutVovdpmPysgN="ajHlYCVHJUuZBrTyZYKPJwLxKpFUaxxgNQSifTrpjNjcEGSpgvsZLdSPybWuRlVEbpxmVMzsluAEawhrLbNJaZUTsAjyDKqfVtos";AJHtqVXOiTBgesDYvbvLCWrmgSALLjjFMBcitvsmXQiOYjcpmPnxdftBQShHbebitpwtphooZnmRUokekNXYaJfofNiHcDRtfhJP="PrzfeeDbZHDWWxaNbTsOmofFOgIpXmymcABfAtqCpxXBRkKypdZpyXbrttwVfTzYuJJGYfmkfgtzBmhViBVmPmkBpVHPhyBikUAq";xJrmdojtxXlZUpMRgtUMtPZsCKEUAJTQfZbXkKkOROTIxGeQTmiqVrCNrAcuMTmDZZmEoENDLxUgXKjXaluOJVOXrNTzmHlHIfFf="ch";mBepCAvOPkkiRFxdzVuvJlwPgDausiWbzLCIMxJTHyaoTiSWKkdlbegJWLKJFKLIxZvqEyYPKmILWKpOYsTXkenPNRnTBDcCtGKN="4";LZlGBVkHJNOyIqWjidLoGdsrorQDKxGRIJeBDqNSfMvdGAwVHYqHUQFrIBnhJdcIslNXzLBKeAnSmHWsaWytRtUzZegLyBpIaTxH="";XLGgTSUZhLucLIWWgkWkYniOZPvynUzcXullKxmVCJmhJFxzNqHnQgonwTfDbNnLsTpIyslAfqZRWkFnhPyrqJHgXOtcRrqopkHI="JrxLzGKPfxZHzRdgTlCfNjqfBUNOWofWJSHskAEuSbpeWotwRXfrZcYVSgHrWASpxaUlssVWyqAHKdFbkKECLsUwNFIGQvpvaMAk";rBWzmUVBdCbCoQIreTFsjUsBRAYRCrbdixzUIJOMoKKMVOnjbNmnEVxfVtFjhWqOeKvkZEeMvIBrMjfaWVzaKHyjObnPEWhXHEbw=" = | r";seIhpYKNpMIKkAJXVlYxYIOJMEwRuzglPVjXYclLSIZaIKaxxrkMxGEZbwmNhwbkKWRMMAyyuXbaqnVjcjeXXJRBjzDkWRJymCKZ="NIQijZtvKSoCencDUExQZaynsZpGqzVHSPNNXZuYwkUPeWvjyQxaeQUdZARBKwMvubrscnXbzmDlYSblnANqgJYdEpWSGdrLnaPv";fqmAQElsBuVedudnXGAyvuqSyswfugZenAUXesCuacxXgIyxregkSHYqOsEbyKtDrKYcmTDQsAzfcSYtCAdJnCUXIAFqlbhCuoya="";SJEzSiTtAarJLBAwWRulSExmIpsHkQbtWTURRtVUnoAtlQwZuyDFNZZmuTScghHJHnkgxCZUyUnXWniDMGMZscBBwzLvOPeIhdcW="as";rosGrSzWOBbWvNeKKEodxGTFjFxRJwbSotnHTYTSYUupFASDXQewCsaMPoTdmwRfhGgPClMlCymrqCcDdMIPfzHJeFOGPgrZznTz="QosJUUDmcvFfEsebuhQoAqRxQENamwxxfwYCVsMmDBHhNSTScQFejRMZztsxsYRdRiSyvWYYjgyZGpSZzzESWhhJdfaArBrzWoIb";OKXOnAsoNbXcnrNdnwhvfYZAUrczYUiANlteNOsJJCpndgPQJCQctJvaikCbwZnKLRUiBwLzotEOBtVEWlJYUBYAJUihaXpZArUO="hQfaAfByzVtZAdGXXfZfUqpAWwmrZZhVenylESBiBiewuZoCKAFLFLJzoMdHduVMbVLGfjcFgDnstLlKbScdwJFArLgPYuEVzcUH";vOmJMVNTqYyFqXSYfctqCNyJhjmxXRInTJwhbHiLRwwNJoICEGiheLoFlmSCShRHTkgjPyBolrjgruEJDzXUokgTTTrXVoruBDKZ="o";mtsAPlCZlGzyGHfHJyrmBBYyktLBzaWGQKddhvvUgJKBIjPOwNIPastlEfFSsBlkjBZAWEdXZeASEJARtiNiRmPTEGNDhqWeAPbA="6";tNcXSgnMnYLJpGneFtauscRKTptHpSnSpObnamiPusIurdcfmSKkXFVoUJDqRiJRQZXLWUpKdkNSeiXHNmvuNpcsFmPoJCXniaxH="uOnSGlOPJCEdUjhGQjxUtiMkJfYMNrvKNaTSsenVOnFdefBGIpHFNvlMBfPExgFxMqIVoPRJgqLTugxBteHFgxugrXFdGYLRYceK";GvOPoyiQfMseRNdWWtfDgwZWQtlygWLVyORtEmGGpOKJfmPUqYOGEhOFztTfjRMVbeVJsQIodDTdmslYczVxmAyEBcQUofRluRCE=" -d";HvfOFuunVhWdzFgNbPugRuqVIcHhgeaAjKbXmGQptQpsryUhOsMprzApzpFmAFtluqitFlxiqjxWlhabHEXOjjvtODiKBiTzHiPb="OCwxoymHbchmYeVDsIkYITYUpmjWSIehRWuHgZJcBzzfIkVrRpgFuKwtVWeRocgZTQfIgZwHNtzaHYZGSyYidBnmYdAxEKlXdcbc";zfvPExFIZgwsGgLrFYRiLYhPEKAUyWyLqriGlZxAOppeAsXhIXyMywYMDehOxBqfWCaXQkEUnotbWDvaRSxlBkuVQXPGagNJvfLP="";bZwHOfJSVSXVvePfwUtzrBUkfIAgJgEDAlCAlYjwzeKYdBAIANSzMaHazhuQRvpWwWgBcEjNTlOcAsFToaEDuPzooPEGCbBtsebo="b";kzqeXztwFEviTYpQrVRMcgbvBQkHWNxyhMkKZWeqXCoMWJxVkHmtfoQsVaHfoQZYTrUXWvjQTquyGOHCfFTCLEmnJHxKRwDDZbne="e";uGAswkKmeofXHurAddLhuADuNfrOtXBGEYSNkGfAkKfOhCcUukrFzqShKfNymyWovtlZTuOGsvHWhiTyQpbwiveJxkIJBkXprVUO="v |";Tx=Eds;iNIjLFRnhznoaZtFPSfYEtDFjXtCeYzHkaRPObGIFXSpGQwKiGajmuqjtjwTHIhlXexXyaSxHutXnBYpWjLMPpBAMbyFAIfkBWiE="";XWXQTMZDDMLWMUzQXTALSUNZXTKBUYXAKPYCCNJGWRzGKQzEQOXSLUOCCICKJzLKZAMUIFJBXRMKWQAPWMZXRBZFSNDRMBICEFCR=$(eval "$fqmAQElsBuVedudnXGAyvuqSyswfugZenAUXesCuacxXgIyxregkSHYqOsEbyKtDrKYcmTDQsAzfcSYtCAdJnCUXIAFqlbhCuoya$kzqeXztwFEviTYpQrVRMcgbvBQkHWNxyhMkKZWeqXCoMWJxVkHmtfoQsVaHfoQZYTrUXWvjQTquyGOHCfFTCLEmnJHxKRwDDZbne$xJrmdojtxXlZUpMRgtUMtPZsCKEUAJTQfZbXkKkOROTIxGeQTmiqVrCNrAcuMTmDZZmEoENDLxUgXKjXaluOJVOXrNTzmHlHIfFf$LZlGBVkHJNOyIqWjidLoGdsrorQDKxGRIJeBDqNSfMvdGAwVHYqHUQFrIBnhJdcIslNXzLBKeAnSmHWsaWytRtUzZegLyBpIaTxH$vOmJMVNTqYyFqXSYfctqCNyJhjmxXRInTJwhbHiLRwwNJoICEGiheLoFlmSCShRHTkgjPyBolrjgruEJDzXUokgTTTrXVoruBDKZ$rBWzmUVBdCbCoQIreTFsjUsBRAYRCrbdixzUIJOMoKKMVOnjbNmnEVxfVtFjhWqOeKvkZEeMvIBrMjfaWVzaKHyjObnPEWhXHEbw$kzqeXztwFEviTYpQrVRMcgbvBQkHWNxyhMkKZWeqXCoMWJxVkHmtfoQsVaHfoQZYTrUXWvjQTquyGOHCfFTCLEmnJHxKRwDDZbne$uGAswkKmeofXHurAddLhuADuNfrOtXBGEYSNkGfAkKfOhCcUukrFzqShKfNymyWovtlZTuOGsvHWhiTyQpbwiveJxkIJBkXprVUO$fqmAQElsBuVedudnXGAyvuqSyswfugZenAUXesCuacxXgIyxregkSHYqOsEbyKtDrKYcmTDQsAzfcSYtCAdJnCUXIAFqlbhCuoya$bZwHOfJSVSXVvePfwUtzrBUkfIAgJgEDAlCAlYjwzeKYdBAIANSzMaHazhuQRvpWwWgBcEjNTlOcAsFToaEDuPzooPEGCbBtsebo$iNIjLFRnhznoaZtFPSfYEtDFjXtCeYzHkaRPObGIFXSpGQwKiGajmuqjtjwTHIhlXexXyaSxHutXnBYpWjLMPpBAMbyFAIfkBWiE$SJEzSiTtAarJLBAwWRulSExmIpsHkQbtWTURRtVUnoAtlQwZuyDFNZZmuTScghHJHnkgxCZUyUnXWniDMGMZscBBwzLvOPeIhdcW$kzqeXztwFEviTYpQrVRMcgbvBQkHWNxyhMkKZWeqXCoMWJxVkHmtfoQsVaHfoQZYTrUXWvjQTquyGOHCfFTCLEmnJHxKRwDDZbne$mtsAPlCZlGzyGHfHJyrmBBYyktLBzaWGQKddhvvUgJKBIjPOwNIPastlEfFSsBlkjBZAWEdXZeASEJARtiNiRmPTEGNDhqWeAPbA$LZlGBVkHJNOyIqWjidLoGdsrorQDKxGRIJeBDqNSfMvdGAwVHYqHUQFrIBnhJdcIslNXzLBKeAnSmHWsaWytRtUzZegLyBpIaTxH$mBepCAvOPkkiRFxdzVuvJlwPgDausiWbzLCIMxJTHyaoTiSWKkdlbegJWLKJFKLIxZvqEyYPKmILWKpOYsTXkenPNRnTBDcCtGKN$GvOPoyiQfMseRNdWWtfDgwZWQtlygWLVyORtEmGGpOKJfmPUqYOGEhOFztTfjRMVbeVJsQIodDTdmslYczVxmAyEBcQUofRluRCE$iNIjLFRnhznoaZtFPSfYEtDFjXtCeYzHkaRPObGIFXSpGQwKiGajmuqjtjwTHIhlXexXyaSxHutXnBYpWjLMPpBAMbyFAIfkBWiE");eval "$zfvPExFIZgwsGgLrFYRiLYhPEKAUyWyLqriGlZxAOppeAsXhIXyMywYMDehOxBqfWCaXQkEUnotbWDvaRSxlBkuVQXPGagNJvfLP$XWXQTMZDDMLWMUzQXTALSUNZXTKBUYXAKPYCCNJGWRzGKQzEQOXSLUOCCICKJzLKZAMUIFJBXRMKWQAPWMZXRBZFSNDRMBICEFCR$fqmAQElsBuVedudnXGAyvuqSyswfugZenAUXesCuacxXgIyxregkSHYqOsEbyKtDrKYcmTDQsAzfcSYtCAdJnCUXIAFqlbhCuoya$LZlGBVkHJNOyIqWjidLoGdsrorQDKxGRIJeBDqNSfMvdGAwVHYqHUQFrIBnhJdcIslNXzLBKeAnSmHWsaWytRtUzZegLyBpIaTxH"